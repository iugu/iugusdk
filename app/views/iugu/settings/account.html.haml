- content_for :title do "Account #{@account.id}" end

%br
%h2
  = I18n.t("iugu.account_settings") + " (##{@account.id})"

- if current_user.is?(:owner, @account)

  = simple_form_for @account, :url => account_update_path(:id => @account.id), :method => :put do |f|
    = f.label :name
    = f.text_field :name
    %br
    = f.submit I18n.t("iugu.save")

- if IuguSDK::enable_subscription_features
  %br
  Plan Name
  = link_to I18n.t("iugu.change")

- unless IuguSDK::enable_custom_domain == false && IuguSDK::enable_subdomain == false
  %br
  %br
  Custom Domains
  - if current_user.is?(:owner, @account) || current_user.is?(:admin, @account)
    = link_to I18n.t("iugu.manage"), account_domains_index_path(@account.id)
  %br
  - if @primary_domain
    Primary: 
    = @primary_domain.url
%br
%br
= link_to I18n.t("iugu.users_and_roles"), account_users_index_path(@account.id)

- if IuguSDK::enable_subscription_features
  %br
  %br
  %div
    = link_to I18n.t("iugu.payment_history")
%br
%br


- if IuguSDK::enable_account_api_token
  - if current_user.is?(:owner, @account)
    - if flash[:group] == :api_token
      %div
        = flash[:notice]
    %div
      Api Token
      = link_to I18n.t("iugu.generate_new_token"), account_generate_new_token_path(@account.id), :method => :post
      %br
      = @account.api_token

- if current_user.is?(:owner, @account)
  - unless @account.destroying?
    = link_to I18n.t("iugu.cancel_account"), account_destroy_path(@account.id), :method => :delete
  - else
    - if IuguSDK::delay_account_exclusion > 0
      = link_to I18n.t("iugu.undo"), account_cancel_destruction_path(@account.id), :method => :delete
    - else
      = I18n.t("iugu.account_destruction_in") + @account.destruction_job.run_at.to_s
