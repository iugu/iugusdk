- content_for :title do I18n.t("iugu.account") + " #{@account.id}" end

%h1
  = I18n.t("iugu.account_settings")
  
%table{ class: "table" }
  %tr
    %td
      = "##{@account.id}"

- if @has_subscription
  - if @subscription.suspended
    %div{ :style => "border: 2px solid #F00; padding: 20px;text-align:center;background:#FFCCCC" }
      %h1.no-bottom-margin
        = I18n.t("iugu.this_account_is_suspended")
      %p.no-bottom-margin
        = I18n.t("iugu.click_to_activate")
  - elsif @subscription.in_trial and (@trial_days = (@subscription.expires_at.to_date.mjd - Date.today.mjd)) > 0
    %div{ :style => "border: 2px solid #185277; padding: 20px;text-align:center;background:#A6D0E8" }
      %h1.no-bottom-margin
        = I18n.t("iugu.trial_period")
      %p.no-bottom-margin
        = "#{@trial_days} dia(s)"

%hr

- if current_user.is?(:owner, @account)
  - if flash[:group] == :account_update
    = flash[:notice]

  = simple_form_for @account, role: "form", :url => account_update_path(@account), :method => :put do |f|
    .form-group
      = f.text_field :name, :placeholder => I18n.t("activerecord.attributes.name"), class: "form-control"

    = f.submit I18n.t("iugu.save"), :class => "btn btn-lg btn-primary btn-block"

%br

- if @has_subscription
  %table.table
    %thead
      %tr
        %th
          = I18n.t "iugu.plan"
        %th
    %tbody
      %tr
        %td
          %h3{ :style => "margin:0px;padding-top:10px;padding-left:10px" }
            = @plan_name
        %td
          .group.horizontal_stacking
            - if current_user.is?(:owner, @account)
              = link_to I18n.t("iugu.change"), plan_index_url(@account), class: "btn btn-primary btn-block"
  - if current_user.is?(:owner, @account)
    = link_to I18n.t("iugu.payment_history"), account_payment_history_path(@account), class: "btn btn-default btn-block"

- if IuguSDK::enable_multiple_users_per_account
  = link_to I18n.t("iugu.users_and_roles"), account_users_index_path(@account), class: "btn btn-default btn-block" 

- unless IuguSDK::enable_custom_domain == false && IuguSDK::enable_account_alias == false

  - if current_user.is?(:owner, @account) || current_user.is?(:admin, @account)
    = link_to I18n.t("iugu.custom_domains"), account_domains_index_path(@account), :class => "btn btn-default btn-block"

    %hr

- if IuguSDK::enable_account_api
  - if current_user.is?(:owner, @account)
    %h2
      = I18n.t("iugu.api_tokens")
    - if flash[:group] == :api_token
      %div
        - if flash[:notice].class == Array
          %ul
            - flash[:notice].each do |e|
              %li
                = e
        - else
          = flash[:notice]
    %div
      %table.table.table-bordered
        - @account.tokens.each do |token|
          %tr
            %td
              = token.api_type
            %td
              = token.description
            %td
              = l token.created_at, :format => :short
            %td
              = link_to I18n.t("iugu.remove"), account_remove_token_path(@account, token), :class => "btn btn-danger btn-block", :confirm => I18n.t("iugu.are_you_sure?"), :method => :delete
          %tr
            %td{ :colspan => 4 }
              = token.token
      = form_tag(account_generate_new_token_path(@account), :method => :post) do
        %h3
          = I18n.t('iugu.add')
        .form-group
          = select_tag :api_type, options_for_select(IuguSDK::account_api_tokens), :class => "form-control"
        .form-group
          = text_field_tag :description, nil, { :placeholder => I18n.t("iugu.description") , class: "form-control" }
        = submit_tag I18n.t("iugu.create"), :class => "btn btn-primary btn-block"

- if current_user.is?(:owner, @account)
  - if @has_subscription
    - if @subscription.suspended or @subscription.in_trial
      = link_to I18n.t("iugu.activate"), account_activate_path(@account), :method => :post, class: "btn btn-success btn-block"
    - else
      = link_to I18n.t("iugu.suspend"), account_suspend_path(@account), :method => :post, class: "btn btn-warning btn-block"
  - unless @account.destroying?
    - if IuguSDK::enable_account_cancel
      = link_to I18n.t("iugu.cancel_account"), account_destroy_path(@account), :method => :delete, class: "btn btn-danger btn-block"
  - else
    - if IuguSDK::delay_account_exclusion > 0
      = link_to I18n.t("iugu.undo"), account_cancel_destruction_path(@account), :method => :delete, class: "btn btn-danger btn-block"
    - else
      = I18n.t("iugu.account_destruction_in") + @account.destruction_job.run_at.to_s
